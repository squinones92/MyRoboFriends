{"version":3,"sources":["components/Card.js","components/CardList.js","components/Searchbox.js","components/Scroll.js","App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","CardList","robots","map","user","i","Searchbox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","filteredRobots","this","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC3B,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,cACrB,gCACA,6BAAKF,IACL,4BAAIC,WCgBQK,EApBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACC,8BAEMA,EAAOC,KAAI,SAACC,EAAMC,GACvB,OACA,cAAC,EAAD,CAEAR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCKOC,EAdG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aACnB,OACC,qBAAKT,UAAU,MAAf,SACC,uBACAA,UAAU,mCACVU,KAAK,SACLC,YAAY,gBACZC,SAAWH,OCGCI,EAVA,SAACC,GACf,OACC,qBAAKC,MAAQ,CAACC,UAAW,SACzBC,OAAQ,kBACRC,OAAQ,SAFR,SAGCJ,EAAMK,YCuCMC,G,wDAvCd,aAAc,IAAD,8BACZ,gBAaDC,eAAiB,SAACC,GACjB,EAAKC,SAAU,CAAEC,YAAaF,EAAMG,OAAOC,SAb3C,EAAKC,MAAO,CACXvB,OAAQ,GACRoB,YAAa,IAJF,E,qDAQb,WAAoB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAG,EAAKT,SAAS,CAACnB,OAAO4B,S,oBAOrC,WAAU,IAAD,OACFC,EAAiBC,KAAKP,MAAMvB,OAAO+B,QAAO,SAAAC,GAC/C,OAAOA,EAAMvC,KAAKwC,cAAcC,SAAS,EAAKX,MAAMH,YAAYa,kBAGjE,OAAiC,IAA7BH,KAAKP,MAAMvB,OAAOmC,OACd,yCAGR,sBAAKvC,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcyB,KAAKb,iBAC9B,cAAC,EAAD,UACA,cAAC,EAAD,CAAUjB,OAAQ6B,a,GAhCHO,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e09bc9ad.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({name, email, id}) => {\n\treturn (\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img alt='robots' src={`https://robohash.org/${id}?200x200`} />\n\t\t\t<div>\n\t\t\t<h2>{name}</h2>\n\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\n\nconst CardList = ({ robots }) => {\n\treturn (\n\t\t<div> \n\t      {\n\t      \trobots.map((user, i) => {\n\t\t\treturn (\n\t\t\t<Card \n\t\t\tkey={i} \n\t\t\tid={robots[i].id} \n\t\t\tname={robots[i].name} \n\t\t\temail={robots[i].email}\n\t\t\t/>\n\t\t\t);\n\t\t\t}) \n\t      }\n      </div>\n\t\n\t);\n}\n\nexport default CardList;","import React from 'react';\n\nconst Searchbox = ({searchChange}) => {\n\treturn (\n\t\t<div className='pa2'>\n\t\t\t<input \n\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\n\t\t\ttype='search' \n\t\t\tplaceholder='search robots'\n\t\t\tonChange= {searchChange}\n\t\t\t/>\n\t\t\t\n\t\t</div>\n\t)\n}\n\nexport default Searchbox;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style ={{overflowY: 'scroll', \n\t\tborder: '1px solid black', \n\t\theight: '500px'}}>\n\t\t{props.children}\n\t\t</div>\n\t)\n};\n\nexport default Scroll;","import React, {Component} from 'react';\nimport CardList from './components/CardList';\nimport Searchbox from './components/Searchbox';\nimport Scroll from './components/Scroll';\nimport './App.css';\n\nclass App extends Component {\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state= {\n\t\t\trobots: [],\n\t\t\tsearchfield: ''\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t.then(response => response.json())\n\t\t.then(users=> this.setState({robots:users}));\t\n\t}\n\n\tonSearchChange = (event) => {\n\t\tthis.setState ({ searchfield: event.target.value })\n\t}\n\n\trender() {\n\t\tconst filteredRobots = this.state.robots.filter(robot =>{\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n\t\t})\n\n\t\tif (this.state.robots.length === 0){\n\t\t\treturn <h1>Loading</h1>\n\t\t} else {\n\t\t\treturn (\n\t\t<div className='tc'>\t\n\t\t\t<h1 className='f1'>RoboFriends</h1>\n\t\t\t<Searchbox searchChange={this.onSearchChange}/>\n\t\t\t<Scroll>\n\t\t\t<CardList robots={filteredRobots}/>\n\t\t\t</Scroll>\n\t\t</div>\n\t\t);\n\t\t}\n\t}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js'\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}